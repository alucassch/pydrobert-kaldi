version: build.{build}.branch.{branch}

environment:
  matrix:
    - image: Visual Studio 2015
      PY_VER: 3.6
      MINICONDA_PATH: "C:\\Miniconda3-x64"
    - image: Visual Studio 2015
      PY_VER: 3.5
      MINICONDA_PATH: "C:\\Miniconda3-x64"
    # 3.4 ought to work, and 2.7 ought not to work, but not because it's missing
    # the visual studio compiler. I'll attribute this to growing pains of
    # Conda Build 3. Either way, I'm commenting them out
    # - image: Visual Studio 2010
    #   PY_VER: 3.4
    #   MINICONDA_PATH: "C:\\Miniconda3-x64"
    # - image: Visual Studio 2008
    #   PY_VER: 2.7
    #   MINICONDA_PATH: "C:\\Miniconda-x64"

clone_depth: 1

init:
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
      }
  - call %MINICONDA_PATH%\Scripts\activate.bat
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q --all
  - conda install conda-build anaconda-client

install:
  - conda build recipe --no-test --python %PY_VER% -m recipe\ci_build.yaml --output-folder dist
  # - conda create -n test python=%PY_VER% pytest
  # - activate test
  # - dir dist
  # - conda install -c file://%cd%\dist\ pydrobert-kaldi

build: false

test_script:
  - conda build --test dist\win-64\pydrobert-*

artifacts:
  - path: dist

deploy:
  provider: GitHub
  description: pydrobert-kaldi version $(appveyor_build_version) for Windows
  artifact: dist
  auth_token:
    secure: QlAHDK+8kEoeqnpg7+GcCOeNfDLT4Vvuoy60Rsh8ncOQTA7sLUnzL4H5tOxE5gmn
  on:
    branch: master
    appveyor_reop_tag: true
