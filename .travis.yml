language: generic

env:
  global:
    DOCKER_IMAGE_32=quay.io/pypa/manylinux1_i686
    DOCKER_IMAGE_64=quay.io/pypa/manylinux1_x86_64
    PRE_CMD_32=linux32
    PRE_CMD_64=

matrix:
  include:
  - os: osx
    env: PY_VER=2.7
  - os: osx
    env: PY_VER=3.5
  - os: osx
    env: PY_VER=3.6
  - os: linux
    sudo: required
    services: docker
    env: PY_VER=2.7
  - os: linux
    sudo: required
    services: docker
    env: PY_VER=3.5
  - os: linux
    sudo: required
    services: docker
    env: PY_VER=3.6

before_install:
- if [ -z "${TRAVIS_TAG}" ]; then
    export SETUPTOOLS_SCM_PRETEND_VERSION="999";
  fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    docker pull $DOCKER_IMAGE_64;
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    export PY_VER_FULL=$(
      pyenv install --list |
      grep -e ' '${PY_VER/./\.}'\.\d$' |
      tail -n 1 | tr -d "[:space:]");
    brew install swig;
    eval "$(pyenv init -)";
    pyenv install $PY_VER_FULL;
  fi

install:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    docker run
      -e "PY_VER=${PY_VER}"
      -e "SETUPTOOLS_SCM_PRETEND_VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION}"
      -v `pwd`:/io
      $DOCKER_IMAGE_64 $PRE_CMD_64
      /io/recipe/build_manylinux.sh;
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    bash recipe/build_osx.sh $PY_VER_FULL;
  fi

script:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    docker run
      -e "PY_VER=${PY_VER}"
      -v `pwd`:/io
      $DOCKER_IMAGE_64 $PRE_CMD_64
      /io/recipe/test_manylinux.sh;
  elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
    bash recipe/test_osx.sh $PY_VER_FULL;
  fi

before_deploy:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    docker run
      -e "PY_VER=${PY_VER}"
      -e "SETUPTOOLS_SCM_PRETEND_VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION}"
      -v `pwd`:/io
      $DOCKER_IMAGE_32 $PRE_CMD_32
      /io/recipe/build_manylinux.sh;
  fi
- if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "${PY_VER}" = "2.7" ]; then
    source venv_test/bin/activate;
    ACCELERATE=1 python setup.py sdist -d dist-osx-py${PY_VER}; deactivate;
  fi
- rm -rf build
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    docker pull continuumio/miniconda3;
    docker run
      -v `pwd`:/io
      -e PY_VER="${PY_VER}"
      -e "TRAVIS=true"
      -e "TRAVIS_BRANCH=${TRAVIS_BRANCH}"
      -e "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"
      continuumio/miniconda3
      /io/recipe/build_conda.sh /io/dist-linux-py${PY_VER};
    docker run
      -v `pwd`:/io
      -e PY_VER="${PY_VER}"
      -e ARCH=32
      -e "TRAVIS=true"
      -e "TRAVIS_BRANCH=${TRAVIS_BRANCH}"
      -e "TRAVIS_BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}"
      continuumio/miniconda3
      /io/recipe/build_conda.sh /io/dist-linux-${PY_VER};
  else
    pyenv install miniconda3-latest;
    pyenv shell miniconda3-latest;
    ./recipe/build_conda.sh dist-osx-py${PY_VER};
  fi
- zip -r dist-${TRAVIS_OS_NAME}-py${PY_VER}.zip  dist-${TRAVIS_OS_NAME}-py${PY_VER}

deploy:
  provider: releases
  api_key:
    secure: xQPZ3Njz+2niZs9+GRDa9zqwcDm6rx/hoI1z+DN9lmF1189pQl8xf3zhzFackhO9uH0ZCpy0rjsyn5QdEZ71fqcvpEFxirF33O7lTb0SA4Wjin02KCPeGFC2LIycbRpOKAG7KS6Wcc0oalczP7j+SIkceYcSmc7xrYliMiHzxyUfHvTDsOSsGIvQTNTxHIdspSLzcXKHsxhpYbJXeEIVZ5LVIAjLn/Qd0dle4FV6t1DFC/4aoO2VfIb/bg6BV6/BUxcMmrhQe6kINeQMGNz4QWxW6UYcQ4AAudVRbePIdej3v6X5u2E/6Ok0kPJMR7GaP2m1ylH0x1912t2D54XNxv8wGXE6FF+5wJ//+iiZwb06/ToPWokR/ZNWwUnOBgYUx/YZJAwxbAQYpQcT659WMKjbYU1+YBCJbN8aEiY2wr7kSTMk8ofWpdLC38mDI9jEUlZSxkqzc4XmC1qyfvw5se9DECFmBe5KskQ46TpVbtOKZBFcCM3orr6K2MKK7HazxnTu1c1ivss4ZZi/xUD6RBNhcCmqWiC7QL/04V6fP3sR3H1b7geDEKvKmGON8BcIOBiaTMB8XOZ/fiB/58xsBvvEG/4bgnmyuOMqRUu7h7kBEoJIVL+5cCm6d5F2Nce0ZKrAQKD45DgPEAp8AxBxdtcnsKLu81h7J7O2aWZLuJ4=
  file_glob: true
  file: dist-${TRAVIS_OS_NAME}-py${PY_VER}.zip
  skip_cleanup: true
  on:
    tags: true
